<nav-tag>
  <nav class="uk-navbar-container uk-margin" uk-navbar>
    <div class="uk-navbar-left uk-margin-left">
      <a class="uk-navbar-item uk-logo" href="#">HiveRec</a>
      <ul class="uk-navbar-nav">
    <li class="{navitem.is_active ? 'uk-active' : null}" each="{(navitem, index) in context.data.navbar.navitems}">
	  <a href="{navitem.url}" onclick="{(e) => changeNav(e, navitem.data_url)}" if="{navitem.label && !navitem.dropdown_items}">{navitem.label}</a>
	  <a href="{navitem.url}" onclick="{(e) => changeNav(e, navitem.data_url)}" if="{navitem.label_msgid && !navitem.dropdown_items}">{context.data.translations[navitem.label_msgid]}</a>

	  <a href="#" if="{navitem.label && navitem.dropdown_items}">{navitem.label}</a>
	  <a href="#" if="{navitem.label_msgid && navitem.dropdown_items}">{context.data.translations[navitem.label_msgid]}</a>
          <div class="uk-navbar-dropdown uk-navbar-dropdown-width-2" if="{navitem.dropdown_items}">
            <ul class="uk-nav uk-navbar-dropdown-nav">
              <li class="{dropitem.is_header ? 'uk-nav-header' : null}" uk-toggle="{'target: .uk-navbar-dropdown'}" each="{dropitem in navitem.dropdown_items}">
                {dropitem.is_header ? dropitem.label : ''}
	        <a href="{dropitem.url}" onclick="{(e) => changeNav(e, dropitem.data_url)}" if="{dropitem.label && !dropitem.is_header}">{dropitem.label}</a>
	        <a href="{dropitem.url}" onclick="{(e) => changeNav(e, dropitem.data_url)}" if="{dropitem.label_msgid && !dropitem.is_header}">{context.data.translations[dropitem.label_msgid]}</a>
              </li>
            </ul>
          </div>
        </li>
      </ul>
    </div>
    <div class="uk-navbar-right uk-margin-right">
      <ul class="uk-navbar-nav">
	<li if="{context.data.locale == 'de'}"><a onclick="{(e) => changeLocale(e, 'en')}">EN</a></li>
	<li if="{context.data.locale == 'en'}"><a onclick="{(e) => changeLocale(e, 'de')}">DE</a></li>
	<li><a onclick="{logout}">Logout</a></li>
      </ul>
    </div>
  </nav>

  <script>
    export default {
	onBeforeMount(props) { this.context = props.context },

	changeNav(event, dataUrl) {
	    event.preventDefault()
	    this.context.refreshDataGet(dataUrl)
	},

	changeLocale(event, locale) {
	    this.context.refreshDataGet(this.context.data.data_url + "?locale=" + locale)
	},

	logout() {
	    event.preventDefault()
	    this.context.postRequest(
		this.context.data.logout.post_url,
		this.context.data.logout.csrf_token,
		{},
		this.redirectCallback)
	},

	redirectCallback(data) {
	    window.location.href = '/'
	},

    }
  </script>
</nav-tag>
